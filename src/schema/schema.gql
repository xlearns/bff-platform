# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type CommonResponse {
  """status code"""
  code: Float

  """status code"""
  message: String
}

input CreateFederationInput {
  """Example field (placeholder)"""
  exampleField: Int!
}

input CreateStateInput {
  """User email"""
  host: String!

  """User email"""
  password: String!

  """User email"""
  port: Float!

  """User name"""
  user: String!
}

input CreateUserInput {
  """User name"""
  name: String!

  """User email"""
  password: String!
}

type Federation {
  """Example field (placeholder)"""
  message: String
}

type Mutation {
  createFederation(createFederationInput: CreateFederationInput!): Federation!
  createState(state: CreateStateInput!): CommonResponse!
  createUser(user: CreateUserInput!): CommonResponse!
  deleteStatus(id: Int!): CommonResponse!
  removeFederation(id: Int!): Federation!
  updateFederation(updateFederationInput: UpdateFederationInput!): Federation!
}

type Query {
  findFeders: Response!
  findOneFeder(id: Int!): Federation!
  findOneStatus(id: Int!): stateResponse!
  findOneUser(id: Int!): userResponse!
  findStatus: statusResponse!
  findUsers: usersResponse!
}

type Response {
  code: Int!
  serve: [StatusType!]
  user: [User!]
}

type StatusType {
  """status code"""
  host: String
  id: Int

  """status code"""
  password: String

  """status code"""
  port: String

  """status code"""
  user: String
}

input UpdateFederationInput {
  """Example field (placeholder)"""
  exampleField: Int
  id: Int!
}

type User {
  id: Int!

  """User name"""
  name: String!

  """User email"""
  password: String!
}

type stateResponse {
  """status code"""
  code: Float

  """status code"""
  data: StatusType

  """status code"""
  message: String
}

type statusResponse {
  """status code"""
  code: Float
  data: [StatusType!]!

  """status code"""
  message: String
}

type userResponse {
  """status code"""
  code: Float

  """status code"""
  data: User

  """status code"""
  message: String
}

type usersResponse {
  """status code"""
  code: Float
  data: [User!]!

  """status code"""
  message: String
}